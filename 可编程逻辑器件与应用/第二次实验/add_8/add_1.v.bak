// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// PROGRAM		"Quartus II 64-Bit"
// VERSION		"Version 15.0.0 Build 145 04/22/2015 SJ Full Version"
// CREATED		"Wed Dec 02 23:12:40 2020"

module add_1(
	a,
	b,
	cin,
	cout,
	sum
);


input wire	a;
input wire	b;
input wire	cin;
output wire	cout;
output wire	sum;

wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_2;





h_add	b2v_inst1(
	.a(a),
	.b(b),
	.cout(SYNTHESIZED_WIRE_2),
	.sum(SYNTHESIZED_WIRE_0));


h_add	b2v_inst2(
	.a(SYNTHESIZED_WIRE_0),
	.b(cin),
	.cout(SYNTHESIZED_WIRE_1),
	.sum(sum));

assign	cout = SYNTHESIZED_WIRE_1 | SYNTHESIZED_WIRE_2;


endmodule
