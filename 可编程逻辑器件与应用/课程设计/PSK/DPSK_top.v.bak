// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// PROGRAM		"Quartus II 64-Bit"
// VERSION		"Version 15.0.0 Build 145 04/22/2015 SJ Full Version"
// CREATED		"Sat Dec 26 19:53:55 2020"

module DPSK_top(
	clk,
	start,
	absolute_in,
	absolute_out,
	pin_name1,
	relative_in,
	pin_name2
);


input wire	clk;
input wire	start;
input wire	absolute_in;
output wire	absolute_out;
output wire	pin_name1;
output wire	relative_in;
output wire	pin_name2;

wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_2;

assign	relative_in = SYNTHESIZED_WIRE_1;
assign	pin_name2 = SYNTHESIZED_WIRE_2;




Demodulator_CPSK	b2v_inst(
	.clk(clk),
	.start(start),
	.x(SYNTHESIZED_WIRE_0),
	.y(SYNTHESIZED_WIRE_2));


Modulator_CPSK	b2v_inst1(
	.clk(clk),
	.start(start),
	.x(SYNTHESIZED_WIRE_1),
	.y(SYNTHESIZED_WIRE_0));


absolute_relative_code	b2v_inst2(
	.clk(clk),
	.start(start),
	.x(absolute_in),
	.y(SYNTHESIZED_WIRE_1));


relative_absolute_code	b2v_inst3(
	.clk(clk),
	.start(start),
	.x(SYNTHESIZED_WIRE_2),
	.y(absolute_out));


endmodule
